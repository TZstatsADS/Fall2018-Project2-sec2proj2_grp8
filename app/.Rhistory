shiny::runApp()
shiny::runApp()
runApp()
runApp('~/Documents/GitHub/Sample')
runApp()
runApp()
shiny::runApp()
runApp()
shiny::runApp()
shiny::runApp('~/Desktop/Fall2018-Project2-sec2proj2_grp8/app')
runApp('~/Desktop/Fall2018-Project2-sec2proj2_grp8/app')
runApp()
runApp()
runApp('~/Downloads')
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
library(jsonlite)
yelp <- stream_in(file("./data/yelp_academic_dataset_business.json"))
str(yelp)
library(jsonlite)
yelp <- stream_in(file("./data/yelp_academic_dataset_business.json"))
getwd()
shiny::runApp()
source("function.R")
get_yelp_data()
shiny::runApp()
runApp('~/Downloads/Project2/未命名檔案夾/Fall2016-Proj2-grp12-master/app')
runApp()
runApp()
source("function.R")
att_loc <- read.csv("./data/NYC_attractions.csv")
getwd()
setwd(..)
setwd("..")
getwd()
setwd("./app")
getwd()
source("function.R")
setwd("..")
att_loc <- read.csv("./data/NYC_attractions.csv")
setwd("./app")
View(att_loc)
getwd()
setwd("..")
att_loc <- read.csv("./data/NYC_attractions.csv")
setwd("./app")
x <- c('SL','CP')
x
setwd("..")
att_loc <- read.csv("./data/NYC_attractions.csv")
setwd("./app")
x <- c('SL','CP')
if (att_loc$Code == att) {
out <- c(att_loc$results[[1]]$Longitude,
att_loc$results[[1]]$Latitude)
}
setwd("..")
att_loc <- read.csv("./data/NYC_attractions.csv")
setwd("./app")
x <- c('SL','CP')
if (att_loc$Code == x) {
out <- c(att_loc$results[[1]]$Longitude,
att_loc$results[[1]]$Latitude)
}
out
setwd("..")
att_loc <- read.csv("./data/NYC_attractions.csv")
setwd("./app")
x <- c('SL','CP')
match(x,att_loc$Code)
setwd("..")
att_loc <- read.csv("./data/NYC_attractions.csv")
setwd("./app")
x <- c('SL','CP')
match(x,att_loc$Code)
c(att_loc$Latitude[[x]])
c(att_loc$Latitude[[1]])
c(att_loc$Latitude[[1:2]])
c(att_loc$Latitude[1])
c(att_loc$Latitude[1:2])
c(att_loc$Latitude[x])
setwd("..")
att_loc <- read.csv("./data/NYC_attractions.csv")
setwd("./app")
x <- c('SL','CP')
match(x,att_loc$Code)
c(att_loc$Latitude[x])
setwd("..")
att_loc <- read.csv("./data/NYC_attractions.csv")
setwd("./app")
x <- c('SL','CP')
y <- match(x,att_loc$Code)
c(att_loc$Latitude[y])
ass <- c('John Doe','Peter Gynn','Jolie Hope')
be <- c(21000, 23400, 26800)
x <- data.frame(employee, salary)
ass <- c('John Doe','Peter Gynn','Jolie Hope')
be <- c(21000, 23400, 26800)
x <- data.frame(ass, be)
x$ass
x$ass <- c('John','Peter')
setwd("..")
att_loc <- read.csv("./data/NYC_attractions.csv")
setwd("./app")
x <- c('SL','CP')
y <- match(x,att_loc$Code)
att_loc$Latitude[y]
runApp()
runApp()
runApp()
shinyServer(function(input, output) {
# Map rendering -----------------------------------------------------------------------------
# Initialization
output$map <- renderLeaflet({
leaflet() %>%
setView(lng = -73.980, lat = 40.740, zoom =13) %>%
addProviderTiles("CartoDB.Positron")
})
# checkbox for price
output$value <- renderPrint({ input$checkGroup })
# Check inputs
observeEvent(input$att, {
m = match(input$att,att_loc$Code)
att_lng = att_loc$Latitude[m]
att_lat = att_loc$Longitude[m]
att_nm = att_loc$Attraction[m]
df_app = data.frame(att_nm, att_lng, att_lat)
})
# Output on map -------------------------------------------------------------
# Make a list of icons
attIcons <- iconList(
SL = makeIcon("SL.png", 18, 18)
)
output$map_output <- renderLeaflet({
mapping <- leaflet(data = df_app) %>%
setView(lng = -73.980, lat = 40.740, zoom =13) %>%
addProviderTiles("CartoDB.Positron") %>%
addMarkers(lng = ~att_lng,
lat = ~att_lng,
popup = ~att_nm)
mapping
})
})
shiny::runApp()
View(att_loc)
View(get_yelp_data)
runApp()
runApp()
runApp()
runApp()
runApp()
setwd("..")
att_loc <- read.csv("./data/NYC_attractions.csv")
setwd("./app")
m = match(c('SL','CP'),att_loc$Code)
att_lng = att_loc$Latitude[m]
att_lat = att_loc$Longitude[m]
att_nm = att_loc$Attraction[m]
df_app = data.frame(att_nm, att_lng, att_lat)
df_app
View(df_app)
shiny::runApp()
View(att_loc)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
if (!require('devtools')) install.packages('devtools')
devtools::install_github('rstudio/leaflet')
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
